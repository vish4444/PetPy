**When installing any new lib:
#download the lib
#if tar.gz then unzip it using 7 zip (unzip it till you find the setup.py file)
#copy the unzipped folder into: C:\Python34\Lib\site-packages
#right click open command window and run: python setup.py install

**When installing a package using pip:
1. check pip --version or pip list using command prompt
2. If you have pip available: pip install pypyodbc (command prompt)
3. Download the package from PYPI , unzip to a folder, double click the setup.py file, or run setup.py install.
4. Command Prompt > cd..<directory> python setup.py install.
5. verify in shell using import
6. If you .py script needs params you can pass from command prompt > cd..<directory>myscript.py arg1 arg2

* Passing params to .py script:
Command prompt in the directory where .py files are placed > python Main.py arg1 arg2 "string arg1"

* Py2exe:
Compiling:
python setup.py py2exe

When running the .exe file use 
filename.exe /k

**For Basic level programming:
https://docs.python.org/3/howto/index.html

https://www.fullstackpython.com/

http://www.programiz.com/python-programming/keywords-identifier

http://sahandsaba.com/thirty-python-language-features-and-tricks-you-may-not-know.html

https://www.toptal.com/python/top-10-mistakes-that-python-programmers-make?utm_source=Engineering+Blog+Subscribers&utm_campaign=51aba2b5ff-Blog_Post_Email_Top10PythonMistakes&utm_medium=email&utm_term=0_af8c2cde60-51aba2b5ff-109835873

* Python Exercises:
**http://www.pythontutor.com/visualize.html#mode=edit

http://www.programiz.com/python-programming/examples

##Learning Python Online:
https://developers.google.com/edu/python/

http://www.informit.com/search/index.aspx?query=python

https://www.codecademy.com/learn/python

https://www.edx.org/course/learn-program-using-python-utarlingtonx-cse1309x#!

http://docs.python-guide.org/en/latest/

https://www.pluralsight.com/courses/full-stack-web-development-python-web2py

https://www.pluralsight.com/courses/python-fundamentals

https://www.springboard.com/learning-paths/web-development-python-django/learn/? --In Progress

http://onlinevideolecture.com/ebooks/index.php%3Fsubject%3DPython%2520Programming

http://www.softcrayons.com/blog/category/python/

https://in.pycon.org/2016/coc.html

http://book.pythontips.com/en/latest/?ref=dzone

https://www.lynda.com/Python-3-tutorials/essential-training/62226-2.html?utm_source=linkedin&lpk35=8891&utm_campaign=feedSingleton-oz-winner-inf-scroll-m012:a001-62226&trk=hp-feed-single-course-photo&utm_medium=integrated-partnership

--Guido's guide
https://www.python.org/dev/peps/pep-0008/

**Python for Embedded Systems:
https://micropython.org/

http://pythontips.com/2014/03/03/using-py2exe-the-right-way/

http://blog.ablepear.com/2012/10/bundling-python-files-into-stand-alone.html

http://www.blog.pythonlibrary.org/

**Regular Exp: 
http://lucumr.pocoo.org/2015/11/18/pythons-hidden-re-gems/?ref=dzone

http://www.dotnetperls.com/re-python

http://spoken-tutorial.org/tutorial-search/?search_foss=Python&search_language=English

##Scheduling Python script via Cron:
	#http://stackoverflow.com/questions/12791997/how-do-you-do-a-simple-chmod-x-from-within-python
	#http://stackoverflow.com/questions/4460262/running-a-python-script-with-cron
	#http://trevorappleton.blogspot.in/2014/06/scheduling-python-programs-using-cron.html
	#https://www.pythonanywhere.com/forums/topic/1447/
	#https://pythonadventures.wordpress.com/tag/cron/
	#http://www.visualcron.com/forum.aspx?g=posts&t=3826
	#http://blogs.esri.com/esri/arcgis/2013/07/30/scheduling-a-scrip/
	#http://apscheduler.readthedocs.org/en/3.0/
	#http://www.codeproject.com/Questions/462996/Schedule-to-run-Python-script

##List operator:
http://effbot.org/zone/python-list.htm

http://www.interactivepython.org/courselib/static/pythonds/index.html

http://www.python-course.eu/python3_multiple_inheritance.php

https://docs.python.org/3/tutorial/index.html



/*Notes*/
# Python's powerful polymorphic list and dictionary types

# Components can be developed in Java and combined to form applications in Python

http://logix4u.net/component/content/article/27-tutorials/44-how-to-create-windows-executable-exe-from-python-script

Algorithms and Python:
http://www.learnalgorithms.in/

https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search

http://www.eternallyconfuzzled.com/jsw_home.aspx

https://en.wikipedia.org/wiki/Sorting_algorithm

http://train.usaco.org/usacogate

https://okepi.wordpress.com/2014/08/21/how-to-become-a-programmer-or-the-art-of-googling-well/

#SQLITE Notes:
http://sebastianraschka.com/Articles/2014_sqlite_in_python_tutorial.html


https://www.udemy.com/complete-web-developer-course/

http://www.taiijas.com/portfolio/

https://angel.co/companies/trending

** Great frameworks like flask and Django make it easy to program in Python. Projects like web2py even include everything you need to create web applications:

Built-in editor
Rocket web server
SQLite database
Python interpreter
Google App Engine deployment tool